include: 
  - project: $_GITLAB_TEMPLATES_REPO
    ref: $_GITLAB_TEMPLATES_REF
    file:
      - '/includes/include.drupalci.variables.yml'
      - '/includes/include.drupalci.workflows.yml'
variables:
  COMPOSER: composer.json
  COMPOSER_ROOT_VERSION: "${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}${CI_COMMIT_BRANCH}-dev"

#############
# Stages    #
#############
stages:
  - üèóÔ∏è Build
  - ü™Ñ Lint
  - üóúÔ∏è Test

#############
# Templates #
#############

.default-job-settings: &default-job-settings-lint
  interruptible: true
  allow_failure: false
  variables:
    _TARGET_PHP: "8.2"
    _TARGET_DB: "sqlite-3"
  image:
    name: $_CONFIG_DOCKERHUB_ROOT/php-$_TARGET_PHP-apache:production
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_ROOT_NAMESPACE == "project"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.composer-cache: &composer-cache
  key:
    files:
      - ./composer.json
      - ./composer.lock
  paths:
    - ./vendor

.yarn-cache: &yarn-cache
  key:
    files:
      - ./package.json
      - ./yarn.lock
  paths:
    - ./node_modules

.with-composer-cache: &with-composer-cache
  cache:
    policy: pull
    <<: *composer-cache
  dependencies:
    - 'üì¶Ô∏è Composer'

.with-yarn-cache: &with-yarn-cache
  dependencies:
    - 'üì¶Ô∏è Yarn'
  cache:
    policy: pull
    <<: *yarn-cache

.default-stage: &default-stage
  stage: üóúÔ∏è Test
  trigger:
    strategy: depend
    include:
      - local: .gitlab-ci/pipeline.yml

.run-on-commit: &run-on-commit
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_ROOT_NAMESPACE == "project"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true

.run-daily: &run-daily
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_PROJECT_ROOT_NAMESPACE == "project"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true

# Default configuration.
'PHP 8.1 MySQL 8':
  <<: *default-stage
  variables:
    _TARGET_PHP: "8.1"
    _TARGET_DB: "mysql-8"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_ROOT_NAMESPACE == "project"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Run on commit, or manually.
'PHP 8.2 MySQL 8':
  <<: [ *default-stage, *run-on-commit ]
  variables:
    _TARGET_PHP: "8.2"
    _TARGET_DB: "mysql-8"

################
# Build Jobs for linting
################

'üì¶Ô∏è Composer':
  <<: *default-job-settings-lint
  stage: üèóÔ∏è Build
  cache:
    <<: *composer-cache
  artifacts:
    expire_in: 1 week
    expose_as: 'composer-vendor'
    paths:
      - vendor/
  script:
      - composer config minimum-stability dev
      - composer config --no-plugins allow-plugins.phpstan/extension-installer true
      - composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
      - composer validate
      - composer install

'üì¶Ô∏è Yarn':
  <<: *default-job-settings-lint
  stage: üèóÔ∏è Build
  cache:
    <<: *yarn-cache
  artifacts:
    expire_in: 1 week
    expose_as: 'yarn-node_modules'
    paths:
      - node_modules/
  script:
    - yarn install

################
# Lint Jobs
################

'üßπ PHP Coding standards (PHPCS)':
  <<: [ *with-composer-cache, *default-job-settings-lint ]
  stage: ü™Ñ Lint
  script:
    - php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=.phpcs.xml src

'üßπ PHP Static Analysis (phpstan)':
  <<: [ *with-composer-cache, *default-job-settings-lint ]
  stage: ü™Ñ Lint
  script:
    - php vendor/bin/phpstan analyze --configuration=phpstan.neon
